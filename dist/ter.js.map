{"version":3,"file":"ter.js","mappings":";;;;;;;;;AAAA,YAAY,mBAAO,CAAC,8BAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,YAAY,cAAc,4BAA4B;AACrG;AACA;;;;;;;;;;;ACXA;AACA;AACA,UAAU,mBAAO,CAAC,8BAAU;AAC5B,WAAW,mBAAO,CAAC,gCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI;AACxB;AACA;AACA,CAAC;;;;;;;;;;;ACZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,QAAQ,QAAQ,UAAU;AAC5C;AACA;AACA,YAAY,MAAM,oBAAoB,QAAQ,sBAAsB;AACpE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UC7TA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://webpack-test/./src/Body.js","webpack://webpack-test/./src/index.js","webpack://webpack-test/./src/vec.js","webpack://webpack-test/webpack/bootstrap","webpack://webpack-test/webpack/before-startup","webpack://webpack-test/webpack/startup","webpack://webpack-test/webpack/after-startup"],"sourcesContent":["const vec = require(\"./vec.js\");\r\n\r\nmodule.exports = class Body {\r\n\tconstructor(width = 100, height = 100, position = new vec(0, 0)) {\r\n\t\tthis.position = position;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\tprint() {\r\n\t\tconsole.log(`width: ${this.width}, height: ${this.height}, position: ${this.position.toStringInt()}`);\r\n\t}\r\n}\r\n","let ter = module.exports;\r\n\r\nter.vec = require(\"./vec.js\");\r\nter.Body = require(\"./Body.js\");\r\n\r\nlet a = new ter.Body();\r\na.print();\r\n\r\nsetInterval(() => {\r\n\tfor (let i = 1000; --i;) {\r\n\t\tlet a = Math.sqrt(i ** 1.5);\r\n\t}\r\n});\r\n","module.exports = class vec {\r\n\tconstructor(x, y) {\r\n\t\tif (typeof x === \"object\") {\r\n\t\t\tif (Array.isArray(x)) {\r\n\t\t\t\tthis.x = x[0];\r\n\t\t\t\tthis.y = x[1];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x = x.x;\r\n\t\t\t\tthis.y = x.y;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof x === \"number\" && y === undefined) {\r\n\t\t\tthis.x = Math.cos(x);\r\n\t\t\tthis.y = Math.sin(x);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\tadd(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\treturn new vec(this.x + vec2, this.y + vec2);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new vec(this.x + vec2.x, this.y + vec2.y);\r\n\t\t}\r\n\t}\r\n\tsub(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\treturn new vec(this.x - vec2, this.y - vec2);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new vec(this.x - vec2.x, this.y - vec2.y);\r\n\t\t}\r\n\t}\r\n\tmult(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\treturn new vec(this.x * vec2, this.y * vec2);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new vec(this.x * vec2.x, this.y * vec2.y);\r\n\t\t}\r\n\t}\r\n\tdiv(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\treturn new vec(this.x / vec2, this.y / vec2);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new vec(this.x / vec2.x, this.y / vec2.y);\r\n\t\t}\r\n\t}\r\n\tadd2(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\tthis.x += vec2;\r\n\t\t\tthis.y += vec2;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x += vec2.x;\r\n\t\t\tthis.y += vec2.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\tsub2(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\tthis.x -= vec2;\r\n\t\t\tthis.y -= vec2;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x -= vec2.x;\r\n\t\t\tthis.y -= vec2.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\tmult2(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\tthis.x *= vec2;\r\n\t\t\tthis.y *= vec2;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x *= vec2.x;\r\n\t\t\tthis.y *= vec2.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\tdiv2(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\tthis.x /= vec2;\r\n\t\t\tthis.y /= vec2;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x /= vec2.x;\r\n\t\t\tthis.y /= vec2.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\tpow(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\treturn new vec(this.x ** vec2, this.y ** vec2);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new vec(this.x ** vec2.x, this.y ** vec2.y);\r\n\t\t}\r\n\t}\r\n\tpow2(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\tthis.x = this.x ** vec2;\r\n\t\t\tthis.y = this.y ** vec2;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x = this.x ** vec2.x;\r\n\t\t\tthis.y = this.y ** vec2.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\tsign() {\r\n\t\treturn new vec(Math.sign(this.x), Math.sign(this.y));\r\n\t}\r\n\tsign2() {\r\n\t\tthis.x = Math.sign(this.x);\r\n\t\tthis.y = Math.sign(this.y);\r\n\t\treturn this;\r\n\t}\r\n\tmod(vec2) {\r\n\t\tif (typeof vec2 === \"number\")\r\n\t\t\treturn new vec(this.x % vec2, this.y % vec2);\r\n\t\treturn new vec(this.x % vec2.x, this.y % vec2.y);\r\n\t}\r\n\tmod2(vec2) {\r\n\t\tif (typeof vec2 === \"number\") {\r\n\t\t\tthis.x %= vec2;\r\n\t\t\tthis.y %= vec2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.x %= vec2.x;\r\n\t\t\tthis.y %= vec2.y;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\tdot(vec2) {\r\n\t\treturn this.x * vec2.x + this.y * vec2.y;\r\n\t}\r\n\tcross(vec2) {\r\n\t\treturn this.x * vec2.y - this.y * vec2.x;\r\n\t}\r\n\tavg(vec2, weight = 0.5) {\r\n\t\tlet weight2 = 1 - weight;\r\n\t\treturn new vec(this.x * weight + vec2.x * weight2, this.y * weight + vec2.y * weight2);\r\n\t}\r\n\tget length() {\r\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\r\n\t}\r\n\tset length(len) {\r\n\t\tlet scale = len / this.length;\r\n\t\tthis.x *= scale;\r\n\t\tthis.y *= scale;\r\n\r\n\t\treturn this;\r\n\t}\r\n\tget angle() {\r\n\t\treturn Math.atan2(this.y, this.x);\r\n\t}\r\n\tget area() {\r\n\t\treturn this.x * this.y;\r\n\t}\r\n\tmanhattan(vec2) {\r\n\t\treturn Math.abs(vec2.x - this.x) + Math.abs(vec2.y - this.y);\r\n\t}\r\n\tabs() {\r\n\t\treturn new vec(Math.abs(this.x), Math.abs(this.y));\r\n\t}\r\n\tabs2() {\r\n\t\tthis.x = Math.abs(this.x);\r\n\t\tthis.y = Math.abs(this.y);\r\n\t\treturn this;\r\n\t}\r\n\treflect(vec2) { // vec2 must be normalized\r\n\t\t// Vect2 = Vect1 - 2 * WallN * (WallN DOT Vect1)\r\n\t\tlet v2 = vec2.normal();\r\n\t\treturn this.sub(v2.mult(v2.dot(this) * 2));\r\n\t}\r\n\treflect2(vec2) { // vec2 must be normalized\r\n\t\tlet v2 = vec2.normal();\r\n\t\treturn this.sub2(v2.mult(v2.dot(this) * 2));\r\n\t}\r\n\trotate(angle) {\r\n\t\treturn new vec(Math.cos(angle) * this.x - Math.sin(angle) * this.y, Math.sin(angle) * this.x + Math.cos(angle) * this.y);\r\n\t}\r\n\trotate2(angle) {\r\n\t\tlet x = Math.cos(angle) * this.x - Math.sin(angle) * this.y;\r\n\t\tthis.y = Math.sin(angle) * this.x + Math.cos(angle) * this.y;\r\n\t\tthis.x = x;\r\n\t\treturn this;\r\n\t}\r\n\tproject(vec2, bound = false) { // projects this vector onto the other one\r\n\t\tlet d1 = this.dot(vec2);\r\n\t\tlet d2 = vec2.x * vec2.x + vec2.y * vec2.y;\r\n\r\n\t\tif (bound) {\r\n\t\t\td1 = Math.max(0, Math.min(d2, d1));\r\n\t\t}\r\n\r\n\t\treturn new vec(d1 * vec2.x / d2, d1 * vec2.y / d2);\r\n\t}\r\n\tproject2(vec2, bound = false) { // projects this vector onto the other one\r\n\t\tlet d1 = this.dot(vec2);\r\n\t\tlet d2 = vec2.x * vec2.x + vec2.y * vec2.y;\r\n\r\n\t\tif (bound) {\r\n\t\t\td1 = Math.max(0, Math.min(d2, d1));\r\n\t\t}\r\n\r\n\t\tthis.x = d1 * vec2.x / d2;\r\n\t\tthis.y = d1 * vec2.y / d2;\r\n\r\n\t\treturn this;\r\n\t}\r\n\tnormalize() {\r\n\t\tlet len = this.length;\r\n\t\tif (len === 0) return new vec(this);\r\n\t\treturn new vec(this.x / len, this.y / len);\r\n\t}\r\n\tnormalize2() {\r\n\t\tlet len = this.length;\r\n\t\tif (len === 0) return this;\r\n\t\tthis.x /= len;\r\n\t\tthis.y /= len;\r\n\t\treturn this;\r\n\t}\r\n\tnormal() { // left hand normal\r\n\t\treturn new vec(this.y, -this.x);\r\n\t}\r\n\tnormal2() { // left hand normal\r\n\t\tlet y = this.y;\r\n\t\tthis.y = -this.x;\r\n\t\tthis.x = y;\r\n\t\treturn this;\r\n\t}\r\n\tfloor() {\r\n\t\treturn new vec(Math.floor(this.x), Math.floor(this.y));\r\n\t}\r\n\tfloor2() {\r\n\t\tthis.x = Math.floor(this.x);\r\n\t\tthis.y = Math.floor(this.y);\r\n\t\treturn this;\r\n\t}\r\n\tceil() {\r\n\t\treturn new vec(Math.ceil(this.x), Math.ceil(this.y));\r\n\t}\r\n\tceil2() {\r\n\t\tthis.x = Math.ceil(this.x);\r\n\t\tthis.y = Math.ceil(this.y);\r\n\t\treturn this;\r\n\t}\r\n\tround() {\r\n\t\treturn new vec(Math.round(this.x), Math.round(this.y));\r\n\t}\r\n\tround2() {\r\n\t\tthis.x = Math.round(this.x);\r\n\t\tthis.y = Math.round(this.y);\r\n\t\treturn this;\r\n\t}\r\n\tmin(vec2) {\r\n\t\treturn new vec(Math.min(vec2.x, this.x), Math.min(vec2.y, this.y));\r\n\t}\r\n\tmin2(vec2) {\r\n\t\tthis.x = Math.min(this.x, vec2.x);\r\n\t\tthis.y = Math.min(this.y, vec2.y);\r\n\t\treturn this;\r\n\t}\r\n\tmax(vec2) {\r\n\t\treturn new vec(Math.max(vec2.x, this.x), Math.max(vec2.y, this.y));\r\n\t}\r\n\tmax2(vec2) {\r\n\t\tthis.x = Math.max(this.x, vec2.x);\r\n\t\tthis.y = Math.max(this.y, vec2.y);\r\n\t\treturn this;\r\n\t}\r\n\tclamp(min, max) {\r\n\t\treturn new vec(Math.max(min.x, Math.min(max.x, this.x)), Math.max(min.y, Math.min(max.y, this.y)));\r\n\t}\r\n\tclamp2(min, max) {\r\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\r\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\r\n\t\treturn this;\r\n\t}\r\n\tequals(vec2) {\r\n\t\treturn this.x === vec2.x && this.y === vec2.y;\r\n\t}\r\n\tset(vec2) {\r\n\t\tthis.x = vec2.x;\r\n\t\tthis.y = vec2.y;\r\n\t\treturn this;\r\n\t}\r\n\ttoString() {\r\n\t\treturn `{ x: ${ this.x }, y: ${ this.y } }`;\r\n\t}\r\n\ttoStringInt() {\r\n\t\treturn `{ x: ${ Math.round(this.x) }, y: ${ Math.round(this.y) } }`;\r\n\t}\r\n\ttoObject() {\r\n\t\treturn { x: this.x, y: this.y };\r\n\t}\r\n\ttoArray() {\r\n\t\treturn [this.x, this.y];\r\n\t}\r\n\tisNaN() {\r\n\t\treturn isNaN(this.x) || isNaN(this.y);\r\n\t}\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":[],"sourceRoot":""}